name: Check Compatibilty with all OS
on:
  push:

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
          
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            submodules: true

      - name: install GCC and cmake
        run: |
            gcc --version && g++ --version
            sudo apt install -y cmake
            
      - name: build
        run: |
            mkdir build 
            cd build && cmake .. && make

      - name: execute
        run: cd build && ./example

  build_centos:
    runs-on: ubuntu-latest
    container:
      image: centos:7
    defaults:
      run:
        shell: bash
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
          
      - name: Install ssh-agent
        run: |
              yum group install -y "Development Tools"
              yum install -y openssh-server openssh-clients
              yum remove -y git*
              yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
              yum install -y git
          
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            submodules: true

      - name: install GCC and cmake
        run: |
              yum install -y centos-release-scl-rh
              yum install -y devtoolset-11
              yum install -y devtoolset-11-toolchain
              yum install -y devtoolset-11-gcc-c++
              curl -C - -O https://cmake.org/files/v3.20/cmake-3.20.0-linux-x86_64.tar.gz
              tar xzf cmake-3.20.0-linux-x86_64.tar.gz
              ln -sv $PWD/cmake-3.20.0-linux-x86_64/bin/cmake /usr/bin/cmake
              which cmake
              cmake --version
              echo 'CC=/opt/rh/devtoolset-11/root/usr/bin/gcc' >> $GITHUB_ENV
              echo 'CXX=/opt/rh/devtoolset-11/root/usr/bin/g++' >> $GITHUB_ENV        
      
      - name: show version
        run: |
              source /opt/rh/devtoolset-11/enable  
              gcc --version && g++ --version
            
      - name: build
        run: |
            mkdir build 
            cd build && cmake .. && make

      - name: execute
        run: cd build && ./example

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
  
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            submodules: true

      - name: install GCC and cmake
        run: |
              echo 'CC=gcc-13' >> $GITHUB_ENV
              echo 'CXX=g++-13' >> $GITHUB_ENV
      
      - name: show version
        run: |  
              gcc-13 --version && g++-13 --version && cmake --version
            
      - name: build
        run: |
            mkdir build 
            cd build && cmake .. && make

      - name: execute
        run: cd build && ./example            

  build_windows-msvc:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13.0
        with:
            cmake-version: '3.21.3'
    
      - name: Use cmake
        run: cmake --version
          
      - run: git config --global core.autocrlf input
        shell: bash
          
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            submodules: true
            
      - name: Build
        run: |
             call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
             set CMAKE_GENERATOR=Ninja
             set CC=cl
             set CXX=cl
             set CPU_CORES=%NUMBER_OF_PROCESSORS%
             mkdir build && cd build && cmake .. && cmake --build .

      - name: execute
        run: cd build && ./example                 
